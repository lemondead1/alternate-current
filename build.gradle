buildscript {
	repositories {
		maven { url = "https://repo.spongepowered.org/maven" }
		maven { url = "https://maven.minecraftforge.net/" }
	}

	dependencies {
		classpath "net.minecraftforge.gradle:ForgeGradle:3.+"
		classpath "org.spongepowered:mixingradle:0.7.+"
	}
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: "org.spongepowered.mixin"

minecraft {
	mappings channel: "stable", version: "39-1.12"
	runs {
		server {
			workingDirectory project.file("run")
			property "forge.logging.markers", "REGISTRIES"
			property "forge.logging.console.level", "debug"
			property "fml.coreMods.load", "alternate.current.core.CoreMod"
		}

		client {
			workingDirectory project.file("run")
			property "forge.logging.markers", "REGISTRIES"
			property "forge.logging.console.level", "debug"
			property "fml.coreMods.load", "alternate.current.core.CoreMod"
		}
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = "${project.archives_base_name}-mc${project.minecraft_version}"
version = project.mod_version
group = project.maven_group

repositories {
	maven { url = "https://repo.spongepowered.org/maven" }
}

configurations {
	include
	implementation.extendsFrom include
}

dependencies {
	minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
	include("org.spongepowered:mixin:${mixin_version}") {
		transitive = false
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("mcmod.info") {
		expand "version": project.version
	}
}

jar {
	manifest {
		attributes "FMLCorePlugin": "alternate.current.core.CoreMod",
				   "FMLCorePluginContainsFMLMod": "true",
				   "ForceLoadAsMod": "true",
				   "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
				   "TweakOrder": "0",
				   "MixinConfigs": "alternate-current.mixins.json",

				   "Specification-Title": "alternate-current",
				   "Specification-Version": "1",
				   "Implementation-Title": project.name,
				   "Implementation-Version": project.version,
				   "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
	}

	from {
		configurations.include.collect { it.isDirectory() ? it : zipTree(it) }
	} {
		rename "LICENSE.txt", "org/spongepowered/LICENSE.txt"
		exclude "META-INF/*.SF"
		exclude "META-INF/*.RSA"
		exclude "META-INF/*.MF"

		exclude "**/*.html"
	}

	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}

	finalizedBy "reobfJar"
}

mixin {
	add sourceSets.main, "alternate-current.refmap.json"
}